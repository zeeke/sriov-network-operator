// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"

	v1 "github.com/k8snetworkplumbingwg/sriov-network-operator/api/v1"
)

// SriovOperatorConfigLister helps list SriovOperatorConfigs.
// All objects returned here must be treated as read-only.
type SriovOperatorConfigLister interface {
	// List lists all SriovOperatorConfigs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.SriovOperatorConfig, err error)
	// SriovOperatorConfigs returns an object that can list and get SriovOperatorConfigs.
	SriovOperatorConfigs(namespace string) SriovOperatorConfigNamespaceLister
	SriovOperatorConfigListerExpansion
}

// sriovOperatorConfigLister implements the SriovOperatorConfigLister interface.
type sriovOperatorConfigLister struct {
	indexer cache.Indexer
}

// NewSriovOperatorConfigLister returns a new SriovOperatorConfigLister.
func NewSriovOperatorConfigLister(indexer cache.Indexer) SriovOperatorConfigLister {
	return &sriovOperatorConfigLister{indexer: indexer}
}

// List lists all SriovOperatorConfigs in the indexer.
func (s *sriovOperatorConfigLister) List(selector labels.Selector) (ret []*v1.SriovOperatorConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.SriovOperatorConfig))
	})
	return ret, err
}

// SriovOperatorConfigs returns an object that can list and get SriovOperatorConfigs.
func (s *sriovOperatorConfigLister) SriovOperatorConfigs(namespace string) SriovOperatorConfigNamespaceLister {
	return sriovOperatorConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SriovOperatorConfigNamespaceLister helps list and get SriovOperatorConfigs.
// All objects returned here must be treated as read-only.
type SriovOperatorConfigNamespaceLister interface {
	// List lists all SriovOperatorConfigs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.SriovOperatorConfig, err error)
	// Get retrieves the SriovOperatorConfig from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.SriovOperatorConfig, error)
	SriovOperatorConfigNamespaceListerExpansion
}

// sriovOperatorConfigNamespaceLister implements the SriovOperatorConfigNamespaceLister
// interface.
type sriovOperatorConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SriovOperatorConfigs in the indexer for a given namespace.
func (s sriovOperatorConfigNamespaceLister) List(selector labels.Selector) (ret []*v1.SriovOperatorConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.SriovOperatorConfig))
	})
	return ret, err
}

// Get retrieves the SriovOperatorConfig from the indexer for a given namespace and name.
func (s sriovOperatorConfigNamespaceLister) Get(name string) (*v1.SriovOperatorConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("sriovoperatorconfig"), name)
	}
	return obj.(*v1.SriovOperatorConfig), nil
}
